// Code generated by go-swagger; DO NOT EDIT.

package jobs_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/pydio/cells-sdk-go/v5/models"
)

// UserCreateJobReader is a Reader for the UserCreateJob structure.
type UserCreateJobReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserCreateJobReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserCreateJobOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUserCreateJobUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUserCreateJobForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUserCreateJobNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUserCreateJobInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /jobs/user/{JobName}] UserCreateJob", response, response.Code())
	}
}

// NewUserCreateJobOK creates a UserCreateJobOK with default headers values
func NewUserCreateJobOK() *UserCreateJobOK {
	return &UserCreateJobOK{}
}

/*
UserCreateJobOK describes a response with status code 200, with default header values.

A successful response.
*/
type UserCreateJobOK struct {
	Payload *models.RestUserJobResponse
}

// IsSuccess returns true when this user create job o k response has a 2xx status code
func (o *UserCreateJobOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this user create job o k response has a 3xx status code
func (o *UserCreateJobOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user create job o k response has a 4xx status code
func (o *UserCreateJobOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this user create job o k response has a 5xx status code
func (o *UserCreateJobOK) IsServerError() bool {
	return false
}

// IsCode returns true when this user create job o k response a status code equal to that given
func (o *UserCreateJobOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the user create job o k response
func (o *UserCreateJobOK) Code() int {
	return 200
}

func (o *UserCreateJobOK) Error() string {
	return fmt.Sprintf("[PUT /jobs/user/{JobName}][%d] userCreateJobOK  %+v", 200, o.Payload)
}

func (o *UserCreateJobOK) String() string {
	return fmt.Sprintf("[PUT /jobs/user/{JobName}][%d] userCreateJobOK  %+v", 200, o.Payload)
}

func (o *UserCreateJobOK) GetPayload() *models.RestUserJobResponse {
	return o.Payload
}

func (o *UserCreateJobOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestUserJobResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserCreateJobUnauthorized creates a UserCreateJobUnauthorized with default headers values
func NewUserCreateJobUnauthorized() *UserCreateJobUnauthorized {
	return &UserCreateJobUnauthorized{}
}

/*
UserCreateJobUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type UserCreateJobUnauthorized struct {
	Payload *models.RestError
}

// IsSuccess returns true when this user create job unauthorized response has a 2xx status code
func (o *UserCreateJobUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user create job unauthorized response has a 3xx status code
func (o *UserCreateJobUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user create job unauthorized response has a 4xx status code
func (o *UserCreateJobUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this user create job unauthorized response has a 5xx status code
func (o *UserCreateJobUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this user create job unauthorized response a status code equal to that given
func (o *UserCreateJobUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the user create job unauthorized response
func (o *UserCreateJobUnauthorized) Code() int {
	return 401
}

func (o *UserCreateJobUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /jobs/user/{JobName}][%d] userCreateJobUnauthorized  %+v", 401, o.Payload)
}

func (o *UserCreateJobUnauthorized) String() string {
	return fmt.Sprintf("[PUT /jobs/user/{JobName}][%d] userCreateJobUnauthorized  %+v", 401, o.Payload)
}

func (o *UserCreateJobUnauthorized) GetPayload() *models.RestError {
	return o.Payload
}

func (o *UserCreateJobUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserCreateJobForbidden creates a UserCreateJobForbidden with default headers values
func NewUserCreateJobForbidden() *UserCreateJobForbidden {
	return &UserCreateJobForbidden{}
}

/*
UserCreateJobForbidden describes a response with status code 403, with default header values.

User has no permission to access this particular resource
*/
type UserCreateJobForbidden struct {
	Payload *models.RestError
}

// IsSuccess returns true when this user create job forbidden response has a 2xx status code
func (o *UserCreateJobForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user create job forbidden response has a 3xx status code
func (o *UserCreateJobForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user create job forbidden response has a 4xx status code
func (o *UserCreateJobForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this user create job forbidden response has a 5xx status code
func (o *UserCreateJobForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this user create job forbidden response a status code equal to that given
func (o *UserCreateJobForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the user create job forbidden response
func (o *UserCreateJobForbidden) Code() int {
	return 403
}

func (o *UserCreateJobForbidden) Error() string {
	return fmt.Sprintf("[PUT /jobs/user/{JobName}][%d] userCreateJobForbidden  %+v", 403, o.Payload)
}

func (o *UserCreateJobForbidden) String() string {
	return fmt.Sprintf("[PUT /jobs/user/{JobName}][%d] userCreateJobForbidden  %+v", 403, o.Payload)
}

func (o *UserCreateJobForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *UserCreateJobForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserCreateJobNotFound creates a UserCreateJobNotFound with default headers values
func NewUserCreateJobNotFound() *UserCreateJobNotFound {
	return &UserCreateJobNotFound{}
}

/*
UserCreateJobNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type UserCreateJobNotFound struct {
	Payload *models.RestError
}

// IsSuccess returns true when this user create job not found response has a 2xx status code
func (o *UserCreateJobNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user create job not found response has a 3xx status code
func (o *UserCreateJobNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user create job not found response has a 4xx status code
func (o *UserCreateJobNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this user create job not found response has a 5xx status code
func (o *UserCreateJobNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this user create job not found response a status code equal to that given
func (o *UserCreateJobNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the user create job not found response
func (o *UserCreateJobNotFound) Code() int {
	return 404
}

func (o *UserCreateJobNotFound) Error() string {
	return fmt.Sprintf("[PUT /jobs/user/{JobName}][%d] userCreateJobNotFound  %+v", 404, o.Payload)
}

func (o *UserCreateJobNotFound) String() string {
	return fmt.Sprintf("[PUT /jobs/user/{JobName}][%d] userCreateJobNotFound  %+v", 404, o.Payload)
}

func (o *UserCreateJobNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *UserCreateJobNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserCreateJobInternalServerError creates a UserCreateJobInternalServerError with default headers values
func NewUserCreateJobInternalServerError() *UserCreateJobInternalServerError {
	return &UserCreateJobInternalServerError{}
}

/*
UserCreateJobInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type UserCreateJobInternalServerError struct {
	Payload *models.RestError
}

// IsSuccess returns true when this user create job internal server error response has a 2xx status code
func (o *UserCreateJobInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user create job internal server error response has a 3xx status code
func (o *UserCreateJobInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user create job internal server error response has a 4xx status code
func (o *UserCreateJobInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this user create job internal server error response has a 5xx status code
func (o *UserCreateJobInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this user create job internal server error response a status code equal to that given
func (o *UserCreateJobInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the user create job internal server error response
func (o *UserCreateJobInternalServerError) Code() int {
	return 500
}

func (o *UserCreateJobInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /jobs/user/{JobName}][%d] userCreateJobInternalServerError  %+v", 500, o.Payload)
}

func (o *UserCreateJobInternalServerError) String() string {
	return fmt.Sprintf("[PUT /jobs/user/{JobName}][%d] userCreateJobInternalServerError  %+v", 500, o.Payload)
}

func (o *UserCreateJobInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *UserCreateJobInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
UserCreateJobBody RestUserJobRequest
swagger:model UserCreateJobBody
*/
type UserCreateJobBody struct {

	// Json-encoded parameters for this job
	JSONParameters string `json:"JsonParameters,omitempty"`
}

// Validate validates this user create job body
func (o *UserCreateJobBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this user create job body based on context it is used
func (o *UserCreateJobBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UserCreateJobBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UserCreateJobBody) UnmarshalBinary(b []byte) error {
	var res UserCreateJobBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
