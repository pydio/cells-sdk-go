// Code generated by go-swagger; DO NOT EDIT.

package share_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-sdk-go/v5/models"
)

// GetShareLinkReader is a Reader for the GetShareLink structure.
type GetShareLinkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetShareLinkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetShareLinkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetShareLinkUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetShareLinkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetShareLinkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetShareLinkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /share/link/{Uuid}] GetShareLink", response, response.Code())
	}
}

// NewGetShareLinkOK creates a GetShareLinkOK with default headers values
func NewGetShareLinkOK() *GetShareLinkOK {
	return &GetShareLinkOK{}
}

/*
GetShareLinkOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetShareLinkOK struct {
	Payload *models.RestShareLink
}

// IsSuccess returns true when this get share link o k response has a 2xx status code
func (o *GetShareLinkOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get share link o k response has a 3xx status code
func (o *GetShareLinkOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get share link o k response has a 4xx status code
func (o *GetShareLinkOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get share link o k response has a 5xx status code
func (o *GetShareLinkOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get share link o k response a status code equal to that given
func (o *GetShareLinkOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get share link o k response
func (o *GetShareLinkOK) Code() int {
	return 200
}

func (o *GetShareLinkOK) Error() string {
	return fmt.Sprintf("[GET /share/link/{Uuid}][%d] getShareLinkOK  %+v", 200, o.Payload)
}

func (o *GetShareLinkOK) String() string {
	return fmt.Sprintf("[GET /share/link/{Uuid}][%d] getShareLinkOK  %+v", 200, o.Payload)
}

func (o *GetShareLinkOK) GetPayload() *models.RestShareLink {
	return o.Payload
}

func (o *GetShareLinkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestShareLink)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetShareLinkUnauthorized creates a GetShareLinkUnauthorized with default headers values
func NewGetShareLinkUnauthorized() *GetShareLinkUnauthorized {
	return &GetShareLinkUnauthorized{}
}

/*
GetShareLinkUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type GetShareLinkUnauthorized struct {
	Payload *models.RestError
}

// IsSuccess returns true when this get share link unauthorized response has a 2xx status code
func (o *GetShareLinkUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get share link unauthorized response has a 3xx status code
func (o *GetShareLinkUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get share link unauthorized response has a 4xx status code
func (o *GetShareLinkUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get share link unauthorized response has a 5xx status code
func (o *GetShareLinkUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get share link unauthorized response a status code equal to that given
func (o *GetShareLinkUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get share link unauthorized response
func (o *GetShareLinkUnauthorized) Code() int {
	return 401
}

func (o *GetShareLinkUnauthorized) Error() string {
	return fmt.Sprintf("[GET /share/link/{Uuid}][%d] getShareLinkUnauthorized  %+v", 401, o.Payload)
}

func (o *GetShareLinkUnauthorized) String() string {
	return fmt.Sprintf("[GET /share/link/{Uuid}][%d] getShareLinkUnauthorized  %+v", 401, o.Payload)
}

func (o *GetShareLinkUnauthorized) GetPayload() *models.RestError {
	return o.Payload
}

func (o *GetShareLinkUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetShareLinkForbidden creates a GetShareLinkForbidden with default headers values
func NewGetShareLinkForbidden() *GetShareLinkForbidden {
	return &GetShareLinkForbidden{}
}

/*
GetShareLinkForbidden describes a response with status code 403, with default header values.

User has no permission to access this particular resource
*/
type GetShareLinkForbidden struct {
	Payload *models.RestError
}

// IsSuccess returns true when this get share link forbidden response has a 2xx status code
func (o *GetShareLinkForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get share link forbidden response has a 3xx status code
func (o *GetShareLinkForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get share link forbidden response has a 4xx status code
func (o *GetShareLinkForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get share link forbidden response has a 5xx status code
func (o *GetShareLinkForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get share link forbidden response a status code equal to that given
func (o *GetShareLinkForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get share link forbidden response
func (o *GetShareLinkForbidden) Code() int {
	return 403
}

func (o *GetShareLinkForbidden) Error() string {
	return fmt.Sprintf("[GET /share/link/{Uuid}][%d] getShareLinkForbidden  %+v", 403, o.Payload)
}

func (o *GetShareLinkForbidden) String() string {
	return fmt.Sprintf("[GET /share/link/{Uuid}][%d] getShareLinkForbidden  %+v", 403, o.Payload)
}

func (o *GetShareLinkForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *GetShareLinkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetShareLinkNotFound creates a GetShareLinkNotFound with default headers values
func NewGetShareLinkNotFound() *GetShareLinkNotFound {
	return &GetShareLinkNotFound{}
}

/*
GetShareLinkNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type GetShareLinkNotFound struct {
	Payload *models.RestError
}

// IsSuccess returns true when this get share link not found response has a 2xx status code
func (o *GetShareLinkNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get share link not found response has a 3xx status code
func (o *GetShareLinkNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get share link not found response has a 4xx status code
func (o *GetShareLinkNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get share link not found response has a 5xx status code
func (o *GetShareLinkNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get share link not found response a status code equal to that given
func (o *GetShareLinkNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get share link not found response
func (o *GetShareLinkNotFound) Code() int {
	return 404
}

func (o *GetShareLinkNotFound) Error() string {
	return fmt.Sprintf("[GET /share/link/{Uuid}][%d] getShareLinkNotFound  %+v", 404, o.Payload)
}

func (o *GetShareLinkNotFound) String() string {
	return fmt.Sprintf("[GET /share/link/{Uuid}][%d] getShareLinkNotFound  %+v", 404, o.Payload)
}

func (o *GetShareLinkNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *GetShareLinkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetShareLinkInternalServerError creates a GetShareLinkInternalServerError with default headers values
func NewGetShareLinkInternalServerError() *GetShareLinkInternalServerError {
	return &GetShareLinkInternalServerError{}
}

/*
GetShareLinkInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type GetShareLinkInternalServerError struct {
	Payload *models.RestError
}

// IsSuccess returns true when this get share link internal server error response has a 2xx status code
func (o *GetShareLinkInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get share link internal server error response has a 3xx status code
func (o *GetShareLinkInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get share link internal server error response has a 4xx status code
func (o *GetShareLinkInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get share link internal server error response has a 5xx status code
func (o *GetShareLinkInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get share link internal server error response a status code equal to that given
func (o *GetShareLinkInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get share link internal server error response
func (o *GetShareLinkInternalServerError) Code() int {
	return 500
}

func (o *GetShareLinkInternalServerError) Error() string {
	return fmt.Sprintf("[GET /share/link/{Uuid}][%d] getShareLinkInternalServerError  %+v", 500, o.Payload)
}

func (o *GetShareLinkInternalServerError) String() string {
	return fmt.Sprintf("[GET /share/link/{Uuid}][%d] getShareLinkInternalServerError  %+v", 500, o.Payload)
}

func (o *GetShareLinkInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *GetShareLinkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
