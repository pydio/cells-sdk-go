// Code generated by go-swagger; DO NOT EDIT.

package graph_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-sdk-go/v5/models"
)

// RecommendReader is a Reader for the Recommend structure.
type RecommendReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RecommendReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRecommendOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRecommendUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRecommendForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRecommendNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRecommendInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /graph/recommend] Recommend", response, response.Code())
	}
}

// NewRecommendOK creates a RecommendOK with default headers values
func NewRecommendOK() *RecommendOK {
	return &RecommendOK{}
}

/*
RecommendOK describes a response with status code 200, with default header values.

A successful response.
*/
type RecommendOK struct {
	Payload *models.RestRecommendResponse
}

// IsSuccess returns true when this recommend o k response has a 2xx status code
func (o *RecommendOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this recommend o k response has a 3xx status code
func (o *RecommendOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this recommend o k response has a 4xx status code
func (o *RecommendOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this recommend o k response has a 5xx status code
func (o *RecommendOK) IsServerError() bool {
	return false
}

// IsCode returns true when this recommend o k response a status code equal to that given
func (o *RecommendOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the recommend o k response
func (o *RecommendOK) Code() int {
	return 200
}

func (o *RecommendOK) Error() string {
	return fmt.Sprintf("[POST /graph/recommend][%d] recommendOK  %+v", 200, o.Payload)
}

func (o *RecommendOK) String() string {
	return fmt.Sprintf("[POST /graph/recommend][%d] recommendOK  %+v", 200, o.Payload)
}

func (o *RecommendOK) GetPayload() *models.RestRecommendResponse {
	return o.Payload
}

func (o *RecommendOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestRecommendResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRecommendUnauthorized creates a RecommendUnauthorized with default headers values
func NewRecommendUnauthorized() *RecommendUnauthorized {
	return &RecommendUnauthorized{}
}

/*
RecommendUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type RecommendUnauthorized struct {
	Payload *models.RestError
}

// IsSuccess returns true when this recommend unauthorized response has a 2xx status code
func (o *RecommendUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this recommend unauthorized response has a 3xx status code
func (o *RecommendUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this recommend unauthorized response has a 4xx status code
func (o *RecommendUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this recommend unauthorized response has a 5xx status code
func (o *RecommendUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this recommend unauthorized response a status code equal to that given
func (o *RecommendUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the recommend unauthorized response
func (o *RecommendUnauthorized) Code() int {
	return 401
}

func (o *RecommendUnauthorized) Error() string {
	return fmt.Sprintf("[POST /graph/recommend][%d] recommendUnauthorized  %+v", 401, o.Payload)
}

func (o *RecommendUnauthorized) String() string {
	return fmt.Sprintf("[POST /graph/recommend][%d] recommendUnauthorized  %+v", 401, o.Payload)
}

func (o *RecommendUnauthorized) GetPayload() *models.RestError {
	return o.Payload
}

func (o *RecommendUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRecommendForbidden creates a RecommendForbidden with default headers values
func NewRecommendForbidden() *RecommendForbidden {
	return &RecommendForbidden{}
}

/*
RecommendForbidden describes a response with status code 403, with default header values.

User has no permission to access this particular resource
*/
type RecommendForbidden struct {
	Payload *models.RestError
}

// IsSuccess returns true when this recommend forbidden response has a 2xx status code
func (o *RecommendForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this recommend forbidden response has a 3xx status code
func (o *RecommendForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this recommend forbidden response has a 4xx status code
func (o *RecommendForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this recommend forbidden response has a 5xx status code
func (o *RecommendForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this recommend forbidden response a status code equal to that given
func (o *RecommendForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the recommend forbidden response
func (o *RecommendForbidden) Code() int {
	return 403
}

func (o *RecommendForbidden) Error() string {
	return fmt.Sprintf("[POST /graph/recommend][%d] recommendForbidden  %+v", 403, o.Payload)
}

func (o *RecommendForbidden) String() string {
	return fmt.Sprintf("[POST /graph/recommend][%d] recommendForbidden  %+v", 403, o.Payload)
}

func (o *RecommendForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *RecommendForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRecommendNotFound creates a RecommendNotFound with default headers values
func NewRecommendNotFound() *RecommendNotFound {
	return &RecommendNotFound{}
}

/*
RecommendNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type RecommendNotFound struct {
	Payload *models.RestError
}

// IsSuccess returns true when this recommend not found response has a 2xx status code
func (o *RecommendNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this recommend not found response has a 3xx status code
func (o *RecommendNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this recommend not found response has a 4xx status code
func (o *RecommendNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this recommend not found response has a 5xx status code
func (o *RecommendNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this recommend not found response a status code equal to that given
func (o *RecommendNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the recommend not found response
func (o *RecommendNotFound) Code() int {
	return 404
}

func (o *RecommendNotFound) Error() string {
	return fmt.Sprintf("[POST /graph/recommend][%d] recommendNotFound  %+v", 404, o.Payload)
}

func (o *RecommendNotFound) String() string {
	return fmt.Sprintf("[POST /graph/recommend][%d] recommendNotFound  %+v", 404, o.Payload)
}

func (o *RecommendNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *RecommendNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRecommendInternalServerError creates a RecommendInternalServerError with default headers values
func NewRecommendInternalServerError() *RecommendInternalServerError {
	return &RecommendInternalServerError{}
}

/*
RecommendInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type RecommendInternalServerError struct {
	Payload *models.RestError
}

// IsSuccess returns true when this recommend internal server error response has a 2xx status code
func (o *RecommendInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this recommend internal server error response has a 3xx status code
func (o *RecommendInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this recommend internal server error response has a 4xx status code
func (o *RecommendInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this recommend internal server error response has a 5xx status code
func (o *RecommendInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this recommend internal server error response a status code equal to that given
func (o *RecommendInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the recommend internal server error response
func (o *RecommendInternalServerError) Code() int {
	return 500
}

func (o *RecommendInternalServerError) Error() string {
	return fmt.Sprintf("[POST /graph/recommend][%d] recommendInternalServerError  %+v", 500, o.Payload)
}

func (o *RecommendInternalServerError) String() string {
	return fmt.Sprintf("[POST /graph/recommend][%d] recommendInternalServerError  %+v", 500, o.Payload)
}

func (o *RecommendInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *RecommendInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
