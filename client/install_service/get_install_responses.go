// Code generated by go-swagger; DO NOT EDIT.

package install_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-sdk-go/v5/models"
)

// GetInstallReader is a Reader for the GetInstall structure.
type GetInstallReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInstallReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInstallOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetInstallUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetInstallForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInstallNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetInstallInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /install] GetInstall", response, response.Code())
	}
}

// NewGetInstallOK creates a GetInstallOK with default headers values
func NewGetInstallOK() *GetInstallOK {
	return &GetInstallOK{}
}

/*
GetInstallOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetInstallOK struct {
	Payload *models.InstallGetDefaultsResponse
}

// IsSuccess returns true when this get install o k response has a 2xx status code
func (o *GetInstallOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get install o k response has a 3xx status code
func (o *GetInstallOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install o k response has a 4xx status code
func (o *GetInstallOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install o k response has a 5xx status code
func (o *GetInstallOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get install o k response a status code equal to that given
func (o *GetInstallOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get install o k response
func (o *GetInstallOK) Code() int {
	return 200
}

func (o *GetInstallOK) Error() string {
	return fmt.Sprintf("[GET /install][%d] getInstallOK  %+v", 200, o.Payload)
}

func (o *GetInstallOK) String() string {
	return fmt.Sprintf("[GET /install][%d] getInstallOK  %+v", 200, o.Payload)
}

func (o *GetInstallOK) GetPayload() *models.InstallGetDefaultsResponse {
	return o.Payload
}

func (o *GetInstallOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InstallGetDefaultsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallUnauthorized creates a GetInstallUnauthorized with default headers values
func NewGetInstallUnauthorized() *GetInstallUnauthorized {
	return &GetInstallUnauthorized{}
}

/*
GetInstallUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type GetInstallUnauthorized struct {
}

// IsSuccess returns true when this get install unauthorized response has a 2xx status code
func (o *GetInstallUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install unauthorized response has a 3xx status code
func (o *GetInstallUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install unauthorized response has a 4xx status code
func (o *GetInstallUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install unauthorized response has a 5xx status code
func (o *GetInstallUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get install unauthorized response a status code equal to that given
func (o *GetInstallUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get install unauthorized response
func (o *GetInstallUnauthorized) Code() int {
	return 401
}

func (o *GetInstallUnauthorized) Error() string {
	return fmt.Sprintf("[GET /install][%d] getInstallUnauthorized ", 401)
}

func (o *GetInstallUnauthorized) String() string {
	return fmt.Sprintf("[GET /install][%d] getInstallUnauthorized ", 401)
}

func (o *GetInstallUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetInstallForbidden creates a GetInstallForbidden with default headers values
func NewGetInstallForbidden() *GetInstallForbidden {
	return &GetInstallForbidden{}
}

/*
GetInstallForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type GetInstallForbidden struct {
	Payload *models.RestError
}

// IsSuccess returns true when this get install forbidden response has a 2xx status code
func (o *GetInstallForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install forbidden response has a 3xx status code
func (o *GetInstallForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install forbidden response has a 4xx status code
func (o *GetInstallForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install forbidden response has a 5xx status code
func (o *GetInstallForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get install forbidden response a status code equal to that given
func (o *GetInstallForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get install forbidden response
func (o *GetInstallForbidden) Code() int {
	return 403
}

func (o *GetInstallForbidden) Error() string {
	return fmt.Sprintf("[GET /install][%d] getInstallForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallForbidden) String() string {
	return fmt.Sprintf("[GET /install][%d] getInstallForbidden  %+v", 403, o.Payload)
}

func (o *GetInstallForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *GetInstallForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallNotFound creates a GetInstallNotFound with default headers values
func NewGetInstallNotFound() *GetInstallNotFound {
	return &GetInstallNotFound{}
}

/*
GetInstallNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type GetInstallNotFound struct {
	Payload *models.RestError
}

// IsSuccess returns true when this get install not found response has a 2xx status code
func (o *GetInstallNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install not found response has a 3xx status code
func (o *GetInstallNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install not found response has a 4xx status code
func (o *GetInstallNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get install not found response has a 5xx status code
func (o *GetInstallNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get install not found response a status code equal to that given
func (o *GetInstallNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get install not found response
func (o *GetInstallNotFound) Code() int {
	return 404
}

func (o *GetInstallNotFound) Error() string {
	return fmt.Sprintf("[GET /install][%d] getInstallNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallNotFound) String() string {
	return fmt.Sprintf("[GET /install][%d] getInstallNotFound  %+v", 404, o.Payload)
}

func (o *GetInstallNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *GetInstallNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInstallInternalServerError creates a GetInstallInternalServerError with default headers values
func NewGetInstallInternalServerError() *GetInstallInternalServerError {
	return &GetInstallInternalServerError{}
}

/*
GetInstallInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type GetInstallInternalServerError struct {
	Payload *models.RestError
}

// IsSuccess returns true when this get install internal server error response has a 2xx status code
func (o *GetInstallInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get install internal server error response has a 3xx status code
func (o *GetInstallInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get install internal server error response has a 4xx status code
func (o *GetInstallInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get install internal server error response has a 5xx status code
func (o *GetInstallInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get install internal server error response a status code equal to that given
func (o *GetInstallInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get install internal server error response
func (o *GetInstallInternalServerError) Code() int {
	return 500
}

func (o *GetInstallInternalServerError) Error() string {
	return fmt.Sprintf("[GET /install][%d] getInstallInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallInternalServerError) String() string {
	return fmt.Sprintf("[GET /install][%d] getInstallInternalServerError  %+v", 500, o.Payload)
}

func (o *GetInstallInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *GetInstallInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
