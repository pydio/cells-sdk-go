// Code generated by go-swagger; DO NOT EDIT.

package tree_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-sdk-go/v3/models"
)

// HeadNodeReader is a Reader for the HeadNode structure.
type HeadNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HeadNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHeadNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewHeadNodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewHeadNodeForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewHeadNodeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewHeadNodeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewHeadNodeOK creates a HeadNodeOK with default headers values
func NewHeadNodeOK() *HeadNodeOK {
	return &HeadNodeOK{}
}

/* HeadNodeOK describes a response with status code 200, with default header values.

HeadNodeOK head node o k
*/
type HeadNodeOK struct {
	Payload *models.RestHeadNodeResponse
}

func (o *HeadNodeOK) Error() string {
	return fmt.Sprintf("[GET /tree/stat/{Node}][%d] headNodeOK  %+v", 200, o.Payload)
}
func (o *HeadNodeOK) GetPayload() *models.RestHeadNodeResponse {
	return o.Payload
}

func (o *HeadNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestHeadNodeResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHeadNodeUnauthorized creates a HeadNodeUnauthorized with default headers values
func NewHeadNodeUnauthorized() *HeadNodeUnauthorized {
	return &HeadNodeUnauthorized{}
}

/* HeadNodeUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type HeadNodeUnauthorized struct {
}

func (o *HeadNodeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /tree/stat/{Node}][%d] headNodeUnauthorized ", 401)
}

func (o *HeadNodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHeadNodeForbidden creates a HeadNodeForbidden with default headers values
func NewHeadNodeForbidden() *HeadNodeForbidden {
	return &HeadNodeForbidden{}
}

/* HeadNodeForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type HeadNodeForbidden struct {
	Payload *models.RestError
}

func (o *HeadNodeForbidden) Error() string {
	return fmt.Sprintf("[GET /tree/stat/{Node}][%d] headNodeForbidden  %+v", 403, o.Payload)
}
func (o *HeadNodeForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *HeadNodeForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHeadNodeNotFound creates a HeadNodeNotFound with default headers values
func NewHeadNodeNotFound() *HeadNodeNotFound {
	return &HeadNodeNotFound{}
}

/* HeadNodeNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type HeadNodeNotFound struct {
	Payload *models.RestError
}

func (o *HeadNodeNotFound) Error() string {
	return fmt.Sprintf("[GET /tree/stat/{Node}][%d] headNodeNotFound  %+v", 404, o.Payload)
}
func (o *HeadNodeNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *HeadNodeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHeadNodeInternalServerError creates a HeadNodeInternalServerError with default headers values
func NewHeadNodeInternalServerError() *HeadNodeInternalServerError {
	return &HeadNodeInternalServerError{}
}

/* HeadNodeInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type HeadNodeInternalServerError struct {
	Payload *models.RestError
}

func (o *HeadNodeInternalServerError) Error() string {
	return fmt.Sprintf("[GET /tree/stat/{Node}][%d] headNodeInternalServerError  %+v", 500, o.Payload)
}
func (o *HeadNodeInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *HeadNodeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
