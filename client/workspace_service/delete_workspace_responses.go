// Code generated by go-swagger; DO NOT EDIT.

package workspace_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-sdk-go/v3/models"
)

// DeleteWorkspaceReader is a Reader for the DeleteWorkspace structure.
type DeleteWorkspaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteWorkspaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteWorkspaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteWorkspaceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteWorkspaceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteWorkspaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteWorkspaceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteWorkspaceOK creates a DeleteWorkspaceOK with default headers values
func NewDeleteWorkspaceOK() *DeleteWorkspaceOK {
	return &DeleteWorkspaceOK{}
}

/* DeleteWorkspaceOK describes a response with status code 200, with default header values.

DeleteWorkspaceOK delete workspace o k
*/
type DeleteWorkspaceOK struct {
	Payload *models.RestDeleteResponse
}

func (o *DeleteWorkspaceOK) Error() string {
	return fmt.Sprintf("[DELETE /workspace/{Slug}][%d] deleteWorkspaceOK  %+v", 200, o.Payload)
}
func (o *DeleteWorkspaceOK) GetPayload() *models.RestDeleteResponse {
	return o.Payload
}

func (o *DeleteWorkspaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestDeleteResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWorkspaceUnauthorized creates a DeleteWorkspaceUnauthorized with default headers values
func NewDeleteWorkspaceUnauthorized() *DeleteWorkspaceUnauthorized {
	return &DeleteWorkspaceUnauthorized{}
}

/* DeleteWorkspaceUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type DeleteWorkspaceUnauthorized struct {
}

func (o *DeleteWorkspaceUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /workspace/{Slug}][%d] deleteWorkspaceUnauthorized ", 401)
}

func (o *DeleteWorkspaceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteWorkspaceForbidden creates a DeleteWorkspaceForbidden with default headers values
func NewDeleteWorkspaceForbidden() *DeleteWorkspaceForbidden {
	return &DeleteWorkspaceForbidden{}
}

/* DeleteWorkspaceForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type DeleteWorkspaceForbidden struct {
	Payload *models.RestError
}

func (o *DeleteWorkspaceForbidden) Error() string {
	return fmt.Sprintf("[DELETE /workspace/{Slug}][%d] deleteWorkspaceForbidden  %+v", 403, o.Payload)
}
func (o *DeleteWorkspaceForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *DeleteWorkspaceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWorkspaceNotFound creates a DeleteWorkspaceNotFound with default headers values
func NewDeleteWorkspaceNotFound() *DeleteWorkspaceNotFound {
	return &DeleteWorkspaceNotFound{}
}

/* DeleteWorkspaceNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type DeleteWorkspaceNotFound struct {
	Payload *models.RestError
}

func (o *DeleteWorkspaceNotFound) Error() string {
	return fmt.Sprintf("[DELETE /workspace/{Slug}][%d] deleteWorkspaceNotFound  %+v", 404, o.Payload)
}
func (o *DeleteWorkspaceNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *DeleteWorkspaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWorkspaceInternalServerError creates a DeleteWorkspaceInternalServerError with default headers values
func NewDeleteWorkspaceInternalServerError() *DeleteWorkspaceInternalServerError {
	return &DeleteWorkspaceInternalServerError{}
}

/* DeleteWorkspaceInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type DeleteWorkspaceInternalServerError struct {
	Payload *models.RestError
}

func (o *DeleteWorkspaceInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /workspace/{Slug}][%d] deleteWorkspaceInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteWorkspaceInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *DeleteWorkspaceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
