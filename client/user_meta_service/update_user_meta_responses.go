// Code generated by go-swagger; DO NOT EDIT.

package user_meta_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-sdk-go/v4/models"
)

// UpdateUserMetaReader is a Reader for the UpdateUserMeta structure.
type UpdateUserMetaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUserMetaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateUserMetaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateUserMetaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateUserMetaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateUserMetaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateUserMetaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /user-meta/update] UpdateUserMeta", response, response.Code())
	}
}

// NewUpdateUserMetaOK creates a UpdateUserMetaOK with default headers values
func NewUpdateUserMetaOK() *UpdateUserMetaOK {
	return &UpdateUserMetaOK{}
}

/*
UpdateUserMetaOK describes a response with status code 200, with default header values.

A successful response.
*/
type UpdateUserMetaOK struct {
	Payload *models.IdmUpdateUserMetaResponse
}

// IsSuccess returns true when this update user meta o k response has a 2xx status code
func (o *UpdateUserMetaOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update user meta o k response has a 3xx status code
func (o *UpdateUserMetaOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user meta o k response has a 4xx status code
func (o *UpdateUserMetaOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update user meta o k response has a 5xx status code
func (o *UpdateUserMetaOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update user meta o k response a status code equal to that given
func (o *UpdateUserMetaOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update user meta o k response
func (o *UpdateUserMetaOK) Code() int {
	return 200
}

func (o *UpdateUserMetaOK) Error() string {
	return fmt.Sprintf("[PUT /user-meta/update][%d] updateUserMetaOK  %+v", 200, o.Payload)
}

func (o *UpdateUserMetaOK) String() string {
	return fmt.Sprintf("[PUT /user-meta/update][%d] updateUserMetaOK  %+v", 200, o.Payload)
}

func (o *UpdateUserMetaOK) GetPayload() *models.IdmUpdateUserMetaResponse {
	return o.Payload
}

func (o *UpdateUserMetaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IdmUpdateUserMetaResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserMetaUnauthorized creates a UpdateUserMetaUnauthorized with default headers values
func NewUpdateUserMetaUnauthorized() *UpdateUserMetaUnauthorized {
	return &UpdateUserMetaUnauthorized{}
}

/*
UpdateUserMetaUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type UpdateUserMetaUnauthorized struct {
}

// IsSuccess returns true when this update user meta unauthorized response has a 2xx status code
func (o *UpdateUserMetaUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user meta unauthorized response has a 3xx status code
func (o *UpdateUserMetaUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user meta unauthorized response has a 4xx status code
func (o *UpdateUserMetaUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update user meta unauthorized response has a 5xx status code
func (o *UpdateUserMetaUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update user meta unauthorized response a status code equal to that given
func (o *UpdateUserMetaUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update user meta unauthorized response
func (o *UpdateUserMetaUnauthorized) Code() int {
	return 401
}

func (o *UpdateUserMetaUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /user-meta/update][%d] updateUserMetaUnauthorized ", 401)
}

func (o *UpdateUserMetaUnauthorized) String() string {
	return fmt.Sprintf("[PUT /user-meta/update][%d] updateUserMetaUnauthorized ", 401)
}

func (o *UpdateUserMetaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateUserMetaForbidden creates a UpdateUserMetaForbidden with default headers values
func NewUpdateUserMetaForbidden() *UpdateUserMetaForbidden {
	return &UpdateUserMetaForbidden{}
}

/*
UpdateUserMetaForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type UpdateUserMetaForbidden struct {
	Payload *models.RestError
}

// IsSuccess returns true when this update user meta forbidden response has a 2xx status code
func (o *UpdateUserMetaForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user meta forbidden response has a 3xx status code
func (o *UpdateUserMetaForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user meta forbidden response has a 4xx status code
func (o *UpdateUserMetaForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update user meta forbidden response has a 5xx status code
func (o *UpdateUserMetaForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update user meta forbidden response a status code equal to that given
func (o *UpdateUserMetaForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update user meta forbidden response
func (o *UpdateUserMetaForbidden) Code() int {
	return 403
}

func (o *UpdateUserMetaForbidden) Error() string {
	return fmt.Sprintf("[PUT /user-meta/update][%d] updateUserMetaForbidden  %+v", 403, o.Payload)
}

func (o *UpdateUserMetaForbidden) String() string {
	return fmt.Sprintf("[PUT /user-meta/update][%d] updateUserMetaForbidden  %+v", 403, o.Payload)
}

func (o *UpdateUserMetaForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *UpdateUserMetaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserMetaNotFound creates a UpdateUserMetaNotFound with default headers values
func NewUpdateUserMetaNotFound() *UpdateUserMetaNotFound {
	return &UpdateUserMetaNotFound{}
}

/*
UpdateUserMetaNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type UpdateUserMetaNotFound struct {
	Payload *models.RestError
}

// IsSuccess returns true when this update user meta not found response has a 2xx status code
func (o *UpdateUserMetaNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user meta not found response has a 3xx status code
func (o *UpdateUserMetaNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user meta not found response has a 4xx status code
func (o *UpdateUserMetaNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update user meta not found response has a 5xx status code
func (o *UpdateUserMetaNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update user meta not found response a status code equal to that given
func (o *UpdateUserMetaNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update user meta not found response
func (o *UpdateUserMetaNotFound) Code() int {
	return 404
}

func (o *UpdateUserMetaNotFound) Error() string {
	return fmt.Sprintf("[PUT /user-meta/update][%d] updateUserMetaNotFound  %+v", 404, o.Payload)
}

func (o *UpdateUserMetaNotFound) String() string {
	return fmt.Sprintf("[PUT /user-meta/update][%d] updateUserMetaNotFound  %+v", 404, o.Payload)
}

func (o *UpdateUserMetaNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *UpdateUserMetaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUserMetaInternalServerError creates a UpdateUserMetaInternalServerError with default headers values
func NewUpdateUserMetaInternalServerError() *UpdateUserMetaInternalServerError {
	return &UpdateUserMetaInternalServerError{}
}

/*
UpdateUserMetaInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type UpdateUserMetaInternalServerError struct {
	Payload *models.RestError
}

// IsSuccess returns true when this update user meta internal server error response has a 2xx status code
func (o *UpdateUserMetaInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update user meta internal server error response has a 3xx status code
func (o *UpdateUserMetaInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update user meta internal server error response has a 4xx status code
func (o *UpdateUserMetaInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update user meta internal server error response has a 5xx status code
func (o *UpdateUserMetaInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update user meta internal server error response a status code equal to that given
func (o *UpdateUserMetaInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update user meta internal server error response
func (o *UpdateUserMetaInternalServerError) Code() int {
	return 500
}

func (o *UpdateUserMetaInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /user-meta/update][%d] updateUserMetaInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateUserMetaInternalServerError) String() string {
	return fmt.Sprintf("[PUT /user-meta/update][%d] updateUserMetaInternalServerError  %+v", 500, o.Payload)
}

func (o *UpdateUserMetaInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *UpdateUserMetaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
