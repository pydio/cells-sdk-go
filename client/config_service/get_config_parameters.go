// Code generated by go-swagger; DO NOT EDIT.

package config_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetConfigParams creates a new GetConfigParams object
// with the default values initialized.
func NewGetConfigParams() *GetConfigParams {
	var ()
	return &GetConfigParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetConfigParamsWithTimeout creates a new GetConfigParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetConfigParamsWithTimeout(timeout time.Duration) *GetConfigParams {
	var ()
	return &GetConfigParams{

		timeout: timeout,
	}
}

// NewGetConfigParamsWithContext creates a new GetConfigParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetConfigParamsWithContext(ctx context.Context) *GetConfigParams {
	var ()
	return &GetConfigParams{

		Context: ctx,
	}
}

// NewGetConfigParamsWithHTTPClient creates a new GetConfigParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetConfigParamsWithHTTPClient(client *http.Client) *GetConfigParams {
	var ()
	return &GetConfigParams{
		HTTPClient: client,
	}
}

/*GetConfigParams contains all the parameters to send to the API endpoint
for the get config operation typically these are written to a http.Request
*/
type GetConfigParams struct {

	/*Data
	  JSON-encoded data to store.

	*/
	Data *string
	/*FullPath*/
	FullPath string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get config params
func (o *GetConfigParams) WithTimeout(timeout time.Duration) *GetConfigParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get config params
func (o *GetConfigParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get config params
func (o *GetConfigParams) WithContext(ctx context.Context) *GetConfigParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get config params
func (o *GetConfigParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get config params
func (o *GetConfigParams) WithHTTPClient(client *http.Client) *GetConfigParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get config params
func (o *GetConfigParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithData adds the data to the get config params
func (o *GetConfigParams) WithData(data *string) *GetConfigParams {
	o.SetData(data)
	return o
}

// SetData adds the data to the get config params
func (o *GetConfigParams) SetData(data *string) {
	o.Data = data
}

// WithFullPath adds the fullPath to the get config params
func (o *GetConfigParams) WithFullPath(fullPath string) *GetConfigParams {
	o.SetFullPath(fullPath)
	return o
}

// SetFullPath adds the fullPath to the get config params
func (o *GetConfigParams) SetFullPath(fullPath string) {
	o.FullPath = fullPath
}

// WriteToRequest writes these params to a swagger request
func (o *GetConfigParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Data != nil {

		// query param Data
		var qrData string
		if o.Data != nil {
			qrData = *o.Data
		}
		qData := qrData
		if qData != "" {
			if err := r.SetQueryParam("Data", qData); err != nil {
				return err
			}
		}

	}

	// path param FullPath
	if err := r.SetPathParam("FullPath", o.FullPath); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
