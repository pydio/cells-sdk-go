// Code generated by go-swagger; DO NOT EDIT.

package config_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-sdk-go/v5/models"
)

// ListRegistryReader is a Reader for the ListRegistry structure.
type ListRegistryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRegistryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListRegistryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListRegistryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListRegistryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListRegistryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListRegistryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /config/registry] ListRegistry", response, response.Code())
	}
}

// NewListRegistryOK creates a ListRegistryOK with default headers values
func NewListRegistryOK() *ListRegistryOK {
	return &ListRegistryOK{}
}

/*
ListRegistryOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListRegistryOK struct {
	Payload *models.RegistryListResponse
}

// IsSuccess returns true when this list registry o k response has a 2xx status code
func (o *ListRegistryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list registry o k response has a 3xx status code
func (o *ListRegistryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list registry o k response has a 4xx status code
func (o *ListRegistryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list registry o k response has a 5xx status code
func (o *ListRegistryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list registry o k response a status code equal to that given
func (o *ListRegistryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list registry o k response
func (o *ListRegistryOK) Code() int {
	return 200
}

func (o *ListRegistryOK) Error() string {
	return fmt.Sprintf("[POST /config/registry][%d] listRegistryOK  %+v", 200, o.Payload)
}

func (o *ListRegistryOK) String() string {
	return fmt.Sprintf("[POST /config/registry][%d] listRegistryOK  %+v", 200, o.Payload)
}

func (o *ListRegistryOK) GetPayload() *models.RegistryListResponse {
	return o.Payload
}

func (o *ListRegistryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RegistryListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRegistryUnauthorized creates a ListRegistryUnauthorized with default headers values
func NewListRegistryUnauthorized() *ListRegistryUnauthorized {
	return &ListRegistryUnauthorized{}
}

/*
ListRegistryUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type ListRegistryUnauthorized struct {
	Payload *models.RestError
}

// IsSuccess returns true when this list registry unauthorized response has a 2xx status code
func (o *ListRegistryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list registry unauthorized response has a 3xx status code
func (o *ListRegistryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list registry unauthorized response has a 4xx status code
func (o *ListRegistryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list registry unauthorized response has a 5xx status code
func (o *ListRegistryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list registry unauthorized response a status code equal to that given
func (o *ListRegistryUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list registry unauthorized response
func (o *ListRegistryUnauthorized) Code() int {
	return 401
}

func (o *ListRegistryUnauthorized) Error() string {
	return fmt.Sprintf("[POST /config/registry][%d] listRegistryUnauthorized  %+v", 401, o.Payload)
}

func (o *ListRegistryUnauthorized) String() string {
	return fmt.Sprintf("[POST /config/registry][%d] listRegistryUnauthorized  %+v", 401, o.Payload)
}

func (o *ListRegistryUnauthorized) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ListRegistryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRegistryForbidden creates a ListRegistryForbidden with default headers values
func NewListRegistryForbidden() *ListRegistryForbidden {
	return &ListRegistryForbidden{}
}

/*
ListRegistryForbidden describes a response with status code 403, with default header values.

User has no permission to access this particular resource
*/
type ListRegistryForbidden struct {
	Payload *models.RestError
}

// IsSuccess returns true when this list registry forbidden response has a 2xx status code
func (o *ListRegistryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list registry forbidden response has a 3xx status code
func (o *ListRegistryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list registry forbidden response has a 4xx status code
func (o *ListRegistryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list registry forbidden response has a 5xx status code
func (o *ListRegistryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list registry forbidden response a status code equal to that given
func (o *ListRegistryForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list registry forbidden response
func (o *ListRegistryForbidden) Code() int {
	return 403
}

func (o *ListRegistryForbidden) Error() string {
	return fmt.Sprintf("[POST /config/registry][%d] listRegistryForbidden  %+v", 403, o.Payload)
}

func (o *ListRegistryForbidden) String() string {
	return fmt.Sprintf("[POST /config/registry][%d] listRegistryForbidden  %+v", 403, o.Payload)
}

func (o *ListRegistryForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ListRegistryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRegistryNotFound creates a ListRegistryNotFound with default headers values
func NewListRegistryNotFound() *ListRegistryNotFound {
	return &ListRegistryNotFound{}
}

/*
ListRegistryNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type ListRegistryNotFound struct {
	Payload *models.RestError
}

// IsSuccess returns true when this list registry not found response has a 2xx status code
func (o *ListRegistryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list registry not found response has a 3xx status code
func (o *ListRegistryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list registry not found response has a 4xx status code
func (o *ListRegistryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list registry not found response has a 5xx status code
func (o *ListRegistryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list registry not found response a status code equal to that given
func (o *ListRegistryNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list registry not found response
func (o *ListRegistryNotFound) Code() int {
	return 404
}

func (o *ListRegistryNotFound) Error() string {
	return fmt.Sprintf("[POST /config/registry][%d] listRegistryNotFound  %+v", 404, o.Payload)
}

func (o *ListRegistryNotFound) String() string {
	return fmt.Sprintf("[POST /config/registry][%d] listRegistryNotFound  %+v", 404, o.Payload)
}

func (o *ListRegistryNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ListRegistryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRegistryInternalServerError creates a ListRegistryInternalServerError with default headers values
func NewListRegistryInternalServerError() *ListRegistryInternalServerError {
	return &ListRegistryInternalServerError{}
}

/*
ListRegistryInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type ListRegistryInternalServerError struct {
	Payload *models.RestError
}

// IsSuccess returns true when this list registry internal server error response has a 2xx status code
func (o *ListRegistryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list registry internal server error response has a 3xx status code
func (o *ListRegistryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list registry internal server error response has a 4xx status code
func (o *ListRegistryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list registry internal server error response has a 5xx status code
func (o *ListRegistryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list registry internal server error response a status code equal to that given
func (o *ListRegistryInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list registry internal server error response
func (o *ListRegistryInternalServerError) Code() int {
	return 500
}

func (o *ListRegistryInternalServerError) Error() string {
	return fmt.Sprintf("[POST /config/registry][%d] listRegistryInternalServerError  %+v", 500, o.Payload)
}

func (o *ListRegistryInternalServerError) String() string {
	return fmt.Sprintf("[POST /config/registry][%d] listRegistryInternalServerError  %+v", 500, o.Payload)
}

func (o *ListRegistryInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ListRegistryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
