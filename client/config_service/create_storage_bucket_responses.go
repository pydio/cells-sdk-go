// Code generated by go-swagger; DO NOT EDIT.

package config_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/pydio/cells-sdk-go/v5/models"
)

// CreateStorageBucketReader is a Reader for the CreateStorageBucket structure.
type CreateStorageBucketReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateStorageBucketReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateStorageBucketOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateStorageBucketUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateStorageBucketForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateStorageBucketNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateStorageBucketInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /config/buckets/{BucketName}] CreateStorageBucket", response, response.Code())
	}
}

// NewCreateStorageBucketOK creates a CreateStorageBucketOK with default headers values
func NewCreateStorageBucketOK() *CreateStorageBucketOK {
	return &CreateStorageBucketOK{}
}

/*
CreateStorageBucketOK describes a response with status code 200, with default header values.

A successful response.
*/
type CreateStorageBucketOK struct {
	Payload *models.RestCreateStorageBucketResponse
}

// IsSuccess returns true when this create storage bucket o k response has a 2xx status code
func (o *CreateStorageBucketOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create storage bucket o k response has a 3xx status code
func (o *CreateStorageBucketOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create storage bucket o k response has a 4xx status code
func (o *CreateStorageBucketOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create storage bucket o k response has a 5xx status code
func (o *CreateStorageBucketOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create storage bucket o k response a status code equal to that given
func (o *CreateStorageBucketOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create storage bucket o k response
func (o *CreateStorageBucketOK) Code() int {
	return 200
}

func (o *CreateStorageBucketOK) Error() string {
	return fmt.Sprintf("[PUT /config/buckets/{BucketName}][%d] createStorageBucketOK  %+v", 200, o.Payload)
}

func (o *CreateStorageBucketOK) String() string {
	return fmt.Sprintf("[PUT /config/buckets/{BucketName}][%d] createStorageBucketOK  %+v", 200, o.Payload)
}

func (o *CreateStorageBucketOK) GetPayload() *models.RestCreateStorageBucketResponse {
	return o.Payload
}

func (o *CreateStorageBucketOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestCreateStorageBucketResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStorageBucketUnauthorized creates a CreateStorageBucketUnauthorized with default headers values
func NewCreateStorageBucketUnauthorized() *CreateStorageBucketUnauthorized {
	return &CreateStorageBucketUnauthorized{}
}

/*
CreateStorageBucketUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type CreateStorageBucketUnauthorized struct {
}

// IsSuccess returns true when this create storage bucket unauthorized response has a 2xx status code
func (o *CreateStorageBucketUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create storage bucket unauthorized response has a 3xx status code
func (o *CreateStorageBucketUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create storage bucket unauthorized response has a 4xx status code
func (o *CreateStorageBucketUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create storage bucket unauthorized response has a 5xx status code
func (o *CreateStorageBucketUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create storage bucket unauthorized response a status code equal to that given
func (o *CreateStorageBucketUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create storage bucket unauthorized response
func (o *CreateStorageBucketUnauthorized) Code() int {
	return 401
}

func (o *CreateStorageBucketUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /config/buckets/{BucketName}][%d] createStorageBucketUnauthorized ", 401)
}

func (o *CreateStorageBucketUnauthorized) String() string {
	return fmt.Sprintf("[PUT /config/buckets/{BucketName}][%d] createStorageBucketUnauthorized ", 401)
}

func (o *CreateStorageBucketUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateStorageBucketForbidden creates a CreateStorageBucketForbidden with default headers values
func NewCreateStorageBucketForbidden() *CreateStorageBucketForbidden {
	return &CreateStorageBucketForbidden{}
}

/*
CreateStorageBucketForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type CreateStorageBucketForbidden struct {
	Payload *models.RestError
}

// IsSuccess returns true when this create storage bucket forbidden response has a 2xx status code
func (o *CreateStorageBucketForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create storage bucket forbidden response has a 3xx status code
func (o *CreateStorageBucketForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create storage bucket forbidden response has a 4xx status code
func (o *CreateStorageBucketForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create storage bucket forbidden response has a 5xx status code
func (o *CreateStorageBucketForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create storage bucket forbidden response a status code equal to that given
func (o *CreateStorageBucketForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create storage bucket forbidden response
func (o *CreateStorageBucketForbidden) Code() int {
	return 403
}

func (o *CreateStorageBucketForbidden) Error() string {
	return fmt.Sprintf("[PUT /config/buckets/{BucketName}][%d] createStorageBucketForbidden  %+v", 403, o.Payload)
}

func (o *CreateStorageBucketForbidden) String() string {
	return fmt.Sprintf("[PUT /config/buckets/{BucketName}][%d] createStorageBucketForbidden  %+v", 403, o.Payload)
}

func (o *CreateStorageBucketForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *CreateStorageBucketForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStorageBucketNotFound creates a CreateStorageBucketNotFound with default headers values
func NewCreateStorageBucketNotFound() *CreateStorageBucketNotFound {
	return &CreateStorageBucketNotFound{}
}

/*
CreateStorageBucketNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type CreateStorageBucketNotFound struct {
	Payload *models.RestError
}

// IsSuccess returns true when this create storage bucket not found response has a 2xx status code
func (o *CreateStorageBucketNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create storage bucket not found response has a 3xx status code
func (o *CreateStorageBucketNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create storage bucket not found response has a 4xx status code
func (o *CreateStorageBucketNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create storage bucket not found response has a 5xx status code
func (o *CreateStorageBucketNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create storage bucket not found response a status code equal to that given
func (o *CreateStorageBucketNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create storage bucket not found response
func (o *CreateStorageBucketNotFound) Code() int {
	return 404
}

func (o *CreateStorageBucketNotFound) Error() string {
	return fmt.Sprintf("[PUT /config/buckets/{BucketName}][%d] createStorageBucketNotFound  %+v", 404, o.Payload)
}

func (o *CreateStorageBucketNotFound) String() string {
	return fmt.Sprintf("[PUT /config/buckets/{BucketName}][%d] createStorageBucketNotFound  %+v", 404, o.Payload)
}

func (o *CreateStorageBucketNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *CreateStorageBucketNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStorageBucketInternalServerError creates a CreateStorageBucketInternalServerError with default headers values
func NewCreateStorageBucketInternalServerError() *CreateStorageBucketInternalServerError {
	return &CreateStorageBucketInternalServerError{}
}

/*
CreateStorageBucketInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type CreateStorageBucketInternalServerError struct {
	Payload *models.RestError
}

// IsSuccess returns true when this create storage bucket internal server error response has a 2xx status code
func (o *CreateStorageBucketInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create storage bucket internal server error response has a 3xx status code
func (o *CreateStorageBucketInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create storage bucket internal server error response has a 4xx status code
func (o *CreateStorageBucketInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create storage bucket internal server error response has a 5xx status code
func (o *CreateStorageBucketInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create storage bucket internal server error response a status code equal to that given
func (o *CreateStorageBucketInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create storage bucket internal server error response
func (o *CreateStorageBucketInternalServerError) Code() int {
	return 500
}

func (o *CreateStorageBucketInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /config/buckets/{BucketName}][%d] createStorageBucketInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateStorageBucketInternalServerError) String() string {
	return fmt.Sprintf("[PUT /config/buckets/{BucketName}][%d] createStorageBucketInternalServerError  %+v", 500, o.Payload)
}

func (o *CreateStorageBucketInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *CreateStorageBucketInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CreateStorageBucketBody RestCreateStorageBucketRequest
swagger:model CreateStorageBucketBody
*/
type CreateStorageBucketBody struct {

	// data source
	DataSource *models.ObjectDataSource `json:"DataSource,omitempty"`
}

// Validate validates this create storage bucket body
func (o *CreateStorageBucketBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDataSource(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateStorageBucketBody) validateDataSource(formats strfmt.Registry) error {
	if swag.IsZero(o.DataSource) { // not required
		return nil
	}

	if o.DataSource != nil {
		if err := o.DataSource.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "DataSource")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "DataSource")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create storage bucket body based on the context it is used
func (o *CreateStorageBucketBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDataSource(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateStorageBucketBody) contextValidateDataSource(ctx context.Context, formats strfmt.Registry) error {

	if o.DataSource != nil {

		if swag.IsZero(o.DataSource) { // not required
			return nil
		}

		if err := o.DataSource.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "DataSource")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "DataSource")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateStorageBucketBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateStorageBucketBody) UnmarshalBinary(b []byte) error {
	var res CreateStorageBucketBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
