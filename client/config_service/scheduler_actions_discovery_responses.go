// Code generated by go-swagger; DO NOT EDIT.

package config_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-sdk-go/v5/models"
)

// SchedulerActionsDiscoveryReader is a Reader for the SchedulerActionsDiscovery structure.
type SchedulerActionsDiscoveryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SchedulerActionsDiscoveryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSchedulerActionsDiscoveryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSchedulerActionsDiscoveryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSchedulerActionsDiscoveryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSchedulerActionsDiscoveryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSchedulerActionsDiscoveryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /config/scheduler/actions] SchedulerActionsDiscovery", response, response.Code())
	}
}

// NewSchedulerActionsDiscoveryOK creates a SchedulerActionsDiscoveryOK with default headers values
func NewSchedulerActionsDiscoveryOK() *SchedulerActionsDiscoveryOK {
	return &SchedulerActionsDiscoveryOK{}
}

/*
SchedulerActionsDiscoveryOK describes a response with status code 200, with default header values.

A successful response.
*/
type SchedulerActionsDiscoveryOK struct {
	Payload *models.RestSchedulerActionsResponse
}

// IsSuccess returns true when this scheduler actions discovery o k response has a 2xx status code
func (o *SchedulerActionsDiscoveryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this scheduler actions discovery o k response has a 3xx status code
func (o *SchedulerActionsDiscoveryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this scheduler actions discovery o k response has a 4xx status code
func (o *SchedulerActionsDiscoveryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this scheduler actions discovery o k response has a 5xx status code
func (o *SchedulerActionsDiscoveryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this scheduler actions discovery o k response a status code equal to that given
func (o *SchedulerActionsDiscoveryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the scheduler actions discovery o k response
func (o *SchedulerActionsDiscoveryOK) Code() int {
	return 200
}

func (o *SchedulerActionsDiscoveryOK) Error() string {
	return fmt.Sprintf("[GET /config/scheduler/actions][%d] schedulerActionsDiscoveryOK  %+v", 200, o.Payload)
}

func (o *SchedulerActionsDiscoveryOK) String() string {
	return fmt.Sprintf("[GET /config/scheduler/actions][%d] schedulerActionsDiscoveryOK  %+v", 200, o.Payload)
}

func (o *SchedulerActionsDiscoveryOK) GetPayload() *models.RestSchedulerActionsResponse {
	return o.Payload
}

func (o *SchedulerActionsDiscoveryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestSchedulerActionsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSchedulerActionsDiscoveryUnauthorized creates a SchedulerActionsDiscoveryUnauthorized with default headers values
func NewSchedulerActionsDiscoveryUnauthorized() *SchedulerActionsDiscoveryUnauthorized {
	return &SchedulerActionsDiscoveryUnauthorized{}
}

/*
SchedulerActionsDiscoveryUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type SchedulerActionsDiscoveryUnauthorized struct {
	Payload *models.RestError
}

// IsSuccess returns true when this scheduler actions discovery unauthorized response has a 2xx status code
func (o *SchedulerActionsDiscoveryUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this scheduler actions discovery unauthorized response has a 3xx status code
func (o *SchedulerActionsDiscoveryUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this scheduler actions discovery unauthorized response has a 4xx status code
func (o *SchedulerActionsDiscoveryUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this scheduler actions discovery unauthorized response has a 5xx status code
func (o *SchedulerActionsDiscoveryUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this scheduler actions discovery unauthorized response a status code equal to that given
func (o *SchedulerActionsDiscoveryUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the scheduler actions discovery unauthorized response
func (o *SchedulerActionsDiscoveryUnauthorized) Code() int {
	return 401
}

func (o *SchedulerActionsDiscoveryUnauthorized) Error() string {
	return fmt.Sprintf("[GET /config/scheduler/actions][%d] schedulerActionsDiscoveryUnauthorized  %+v", 401, o.Payload)
}

func (o *SchedulerActionsDiscoveryUnauthorized) String() string {
	return fmt.Sprintf("[GET /config/scheduler/actions][%d] schedulerActionsDiscoveryUnauthorized  %+v", 401, o.Payload)
}

func (o *SchedulerActionsDiscoveryUnauthorized) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SchedulerActionsDiscoveryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSchedulerActionsDiscoveryForbidden creates a SchedulerActionsDiscoveryForbidden with default headers values
func NewSchedulerActionsDiscoveryForbidden() *SchedulerActionsDiscoveryForbidden {
	return &SchedulerActionsDiscoveryForbidden{}
}

/*
SchedulerActionsDiscoveryForbidden describes a response with status code 403, with default header values.

User has no permission to access this particular resource
*/
type SchedulerActionsDiscoveryForbidden struct {
	Payload *models.RestError
}

// IsSuccess returns true when this scheduler actions discovery forbidden response has a 2xx status code
func (o *SchedulerActionsDiscoveryForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this scheduler actions discovery forbidden response has a 3xx status code
func (o *SchedulerActionsDiscoveryForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this scheduler actions discovery forbidden response has a 4xx status code
func (o *SchedulerActionsDiscoveryForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this scheduler actions discovery forbidden response has a 5xx status code
func (o *SchedulerActionsDiscoveryForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this scheduler actions discovery forbidden response a status code equal to that given
func (o *SchedulerActionsDiscoveryForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the scheduler actions discovery forbidden response
func (o *SchedulerActionsDiscoveryForbidden) Code() int {
	return 403
}

func (o *SchedulerActionsDiscoveryForbidden) Error() string {
	return fmt.Sprintf("[GET /config/scheduler/actions][%d] schedulerActionsDiscoveryForbidden  %+v", 403, o.Payload)
}

func (o *SchedulerActionsDiscoveryForbidden) String() string {
	return fmt.Sprintf("[GET /config/scheduler/actions][%d] schedulerActionsDiscoveryForbidden  %+v", 403, o.Payload)
}

func (o *SchedulerActionsDiscoveryForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SchedulerActionsDiscoveryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSchedulerActionsDiscoveryNotFound creates a SchedulerActionsDiscoveryNotFound with default headers values
func NewSchedulerActionsDiscoveryNotFound() *SchedulerActionsDiscoveryNotFound {
	return &SchedulerActionsDiscoveryNotFound{}
}

/*
SchedulerActionsDiscoveryNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type SchedulerActionsDiscoveryNotFound struct {
	Payload *models.RestError
}

// IsSuccess returns true when this scheduler actions discovery not found response has a 2xx status code
func (o *SchedulerActionsDiscoveryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this scheduler actions discovery not found response has a 3xx status code
func (o *SchedulerActionsDiscoveryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this scheduler actions discovery not found response has a 4xx status code
func (o *SchedulerActionsDiscoveryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this scheduler actions discovery not found response has a 5xx status code
func (o *SchedulerActionsDiscoveryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this scheduler actions discovery not found response a status code equal to that given
func (o *SchedulerActionsDiscoveryNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the scheduler actions discovery not found response
func (o *SchedulerActionsDiscoveryNotFound) Code() int {
	return 404
}

func (o *SchedulerActionsDiscoveryNotFound) Error() string {
	return fmt.Sprintf("[GET /config/scheduler/actions][%d] schedulerActionsDiscoveryNotFound  %+v", 404, o.Payload)
}

func (o *SchedulerActionsDiscoveryNotFound) String() string {
	return fmt.Sprintf("[GET /config/scheduler/actions][%d] schedulerActionsDiscoveryNotFound  %+v", 404, o.Payload)
}

func (o *SchedulerActionsDiscoveryNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SchedulerActionsDiscoveryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSchedulerActionsDiscoveryInternalServerError creates a SchedulerActionsDiscoveryInternalServerError with default headers values
func NewSchedulerActionsDiscoveryInternalServerError() *SchedulerActionsDiscoveryInternalServerError {
	return &SchedulerActionsDiscoveryInternalServerError{}
}

/*
SchedulerActionsDiscoveryInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type SchedulerActionsDiscoveryInternalServerError struct {
	Payload *models.RestError
}

// IsSuccess returns true when this scheduler actions discovery internal server error response has a 2xx status code
func (o *SchedulerActionsDiscoveryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this scheduler actions discovery internal server error response has a 3xx status code
func (o *SchedulerActionsDiscoveryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this scheduler actions discovery internal server error response has a 4xx status code
func (o *SchedulerActionsDiscoveryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this scheduler actions discovery internal server error response has a 5xx status code
func (o *SchedulerActionsDiscoveryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this scheduler actions discovery internal server error response a status code equal to that given
func (o *SchedulerActionsDiscoveryInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the scheduler actions discovery internal server error response
func (o *SchedulerActionsDiscoveryInternalServerError) Code() int {
	return 500
}

func (o *SchedulerActionsDiscoveryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /config/scheduler/actions][%d] schedulerActionsDiscoveryInternalServerError  %+v", 500, o.Payload)
}

func (o *SchedulerActionsDiscoveryInternalServerError) String() string {
	return fmt.Sprintf("[GET /config/scheduler/actions][%d] schedulerActionsDiscoveryInternalServerError  %+v", 500, o.Payload)
}

func (o *SchedulerActionsDiscoveryInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SchedulerActionsDiscoveryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
