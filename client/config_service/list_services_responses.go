// Code generated by go-swagger; DO NOT EDIT.

package config_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-sdk-go/v5/models"
)

// ListServicesReader is a Reader for the ListServices structure.
type ListServicesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListServicesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListServicesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListServicesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListServicesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListServicesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListServicesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /config/ctl] ListServices", response, response.Code())
	}
}

// NewListServicesOK creates a ListServicesOK with default headers values
func NewListServicesOK() *ListServicesOK {
	return &ListServicesOK{}
}

/*
ListServicesOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListServicesOK struct {
	Payload *models.RestServiceCollection
}

// IsSuccess returns true when this list services o k response has a 2xx status code
func (o *ListServicesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list services o k response has a 3xx status code
func (o *ListServicesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list services o k response has a 4xx status code
func (o *ListServicesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list services o k response has a 5xx status code
func (o *ListServicesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list services o k response a status code equal to that given
func (o *ListServicesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list services o k response
func (o *ListServicesOK) Code() int {
	return 200
}

func (o *ListServicesOK) Error() string {
	return fmt.Sprintf("[GET /config/ctl][%d] listServicesOK  %+v", 200, o.Payload)
}

func (o *ListServicesOK) String() string {
	return fmt.Sprintf("[GET /config/ctl][%d] listServicesOK  %+v", 200, o.Payload)
}

func (o *ListServicesOK) GetPayload() *models.RestServiceCollection {
	return o.Payload
}

func (o *ListServicesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestServiceCollection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServicesUnauthorized creates a ListServicesUnauthorized with default headers values
func NewListServicesUnauthorized() *ListServicesUnauthorized {
	return &ListServicesUnauthorized{}
}

/*
ListServicesUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type ListServicesUnauthorized struct {
}

// IsSuccess returns true when this list services unauthorized response has a 2xx status code
func (o *ListServicesUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list services unauthorized response has a 3xx status code
func (o *ListServicesUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list services unauthorized response has a 4xx status code
func (o *ListServicesUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list services unauthorized response has a 5xx status code
func (o *ListServicesUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list services unauthorized response a status code equal to that given
func (o *ListServicesUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list services unauthorized response
func (o *ListServicesUnauthorized) Code() int {
	return 401
}

func (o *ListServicesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /config/ctl][%d] listServicesUnauthorized ", 401)
}

func (o *ListServicesUnauthorized) String() string {
	return fmt.Sprintf("[GET /config/ctl][%d] listServicesUnauthorized ", 401)
}

func (o *ListServicesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListServicesForbidden creates a ListServicesForbidden with default headers values
func NewListServicesForbidden() *ListServicesForbidden {
	return &ListServicesForbidden{}
}

/*
ListServicesForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type ListServicesForbidden struct {
	Payload *models.RestError
}

// IsSuccess returns true when this list services forbidden response has a 2xx status code
func (o *ListServicesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list services forbidden response has a 3xx status code
func (o *ListServicesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list services forbidden response has a 4xx status code
func (o *ListServicesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list services forbidden response has a 5xx status code
func (o *ListServicesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list services forbidden response a status code equal to that given
func (o *ListServicesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list services forbidden response
func (o *ListServicesForbidden) Code() int {
	return 403
}

func (o *ListServicesForbidden) Error() string {
	return fmt.Sprintf("[GET /config/ctl][%d] listServicesForbidden  %+v", 403, o.Payload)
}

func (o *ListServicesForbidden) String() string {
	return fmt.Sprintf("[GET /config/ctl][%d] listServicesForbidden  %+v", 403, o.Payload)
}

func (o *ListServicesForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ListServicesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServicesNotFound creates a ListServicesNotFound with default headers values
func NewListServicesNotFound() *ListServicesNotFound {
	return &ListServicesNotFound{}
}

/*
ListServicesNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type ListServicesNotFound struct {
	Payload *models.RestError
}

// IsSuccess returns true when this list services not found response has a 2xx status code
func (o *ListServicesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list services not found response has a 3xx status code
func (o *ListServicesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list services not found response has a 4xx status code
func (o *ListServicesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list services not found response has a 5xx status code
func (o *ListServicesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list services not found response a status code equal to that given
func (o *ListServicesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list services not found response
func (o *ListServicesNotFound) Code() int {
	return 404
}

func (o *ListServicesNotFound) Error() string {
	return fmt.Sprintf("[GET /config/ctl][%d] listServicesNotFound  %+v", 404, o.Payload)
}

func (o *ListServicesNotFound) String() string {
	return fmt.Sprintf("[GET /config/ctl][%d] listServicesNotFound  %+v", 404, o.Payload)
}

func (o *ListServicesNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ListServicesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServicesInternalServerError creates a ListServicesInternalServerError with default headers values
func NewListServicesInternalServerError() *ListServicesInternalServerError {
	return &ListServicesInternalServerError{}
}

/*
ListServicesInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type ListServicesInternalServerError struct {
	Payload *models.RestError
}

// IsSuccess returns true when this list services internal server error response has a 2xx status code
func (o *ListServicesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list services internal server error response has a 3xx status code
func (o *ListServicesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list services internal server error response has a 4xx status code
func (o *ListServicesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list services internal server error response has a 5xx status code
func (o *ListServicesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list services internal server error response a status code equal to that given
func (o *ListServicesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list services internal server error response
func (o *ListServicesInternalServerError) Code() int {
	return 500
}

func (o *ListServicesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /config/ctl][%d] listServicesInternalServerError  %+v", 500, o.Payload)
}

func (o *ListServicesInternalServerError) String() string {
	return fmt.Sprintf("[GET /config/ctl][%d] listServicesInternalServerError  %+v", 500, o.Payload)
}

func (o *ListServicesInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ListServicesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
