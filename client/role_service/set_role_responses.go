// Code generated by go-swagger; DO NOT EDIT.

package role_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-sdk-go/v3/models"
)

// SetRoleReader is a Reader for the SetRole structure.
type SetRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSetRoleUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSetRoleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSetRoleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSetRoleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSetRoleOK creates a SetRoleOK with default headers values
func NewSetRoleOK() *SetRoleOK {
	return &SetRoleOK{}
}

/* SetRoleOK describes a response with status code 200, with default header values.

SetRoleOK set role o k
*/
type SetRoleOK struct {
	Payload *models.IdmRole
}

func (o *SetRoleOK) Error() string {
	return fmt.Sprintf("[PUT /role/{Uuid}][%d] setRoleOK  %+v", 200, o.Payload)
}
func (o *SetRoleOK) GetPayload() *models.IdmRole {
	return o.Payload
}

func (o *SetRoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IdmRole)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetRoleUnauthorized creates a SetRoleUnauthorized with default headers values
func NewSetRoleUnauthorized() *SetRoleUnauthorized {
	return &SetRoleUnauthorized{}
}

/* SetRoleUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type SetRoleUnauthorized struct {
}

func (o *SetRoleUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /role/{Uuid}][%d] setRoleUnauthorized ", 401)
}

func (o *SetRoleUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetRoleForbidden creates a SetRoleForbidden with default headers values
func NewSetRoleForbidden() *SetRoleForbidden {
	return &SetRoleForbidden{}
}

/* SetRoleForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type SetRoleForbidden struct {
	Payload *models.RestError
}

func (o *SetRoleForbidden) Error() string {
	return fmt.Sprintf("[PUT /role/{Uuid}][%d] setRoleForbidden  %+v", 403, o.Payload)
}
func (o *SetRoleForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SetRoleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetRoleNotFound creates a SetRoleNotFound with default headers values
func NewSetRoleNotFound() *SetRoleNotFound {
	return &SetRoleNotFound{}
}

/* SetRoleNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type SetRoleNotFound struct {
	Payload *models.RestError
}

func (o *SetRoleNotFound) Error() string {
	return fmt.Sprintf("[PUT /role/{Uuid}][%d] setRoleNotFound  %+v", 404, o.Payload)
}
func (o *SetRoleNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SetRoleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetRoleInternalServerError creates a SetRoleInternalServerError with default headers values
func NewSetRoleInternalServerError() *SetRoleInternalServerError {
	return &SetRoleInternalServerError{}
}

/* SetRoleInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type SetRoleInternalServerError struct {
	Payload *models.RestError
}

func (o *SetRoleInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /role/{Uuid}][%d] setRoleInternalServerError  %+v", 500, o.Payload)
}
func (o *SetRoleInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SetRoleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
