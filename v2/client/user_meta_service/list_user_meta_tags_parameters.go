// Code generated by go-swagger; DO NOT EDIT.

package user_meta_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListUserMetaTagsParams creates a new ListUserMetaTagsParams object
// with the default values initialized.
func NewListUserMetaTagsParams() *ListUserMetaTagsParams {
	var ()
	return &ListUserMetaTagsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListUserMetaTagsParamsWithTimeout creates a new ListUserMetaTagsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListUserMetaTagsParamsWithTimeout(timeout time.Duration) *ListUserMetaTagsParams {
	var ()
	return &ListUserMetaTagsParams{

		timeout: timeout,
	}
}

// NewListUserMetaTagsParamsWithContext creates a new ListUserMetaTagsParams object
// with the default values initialized, and the ability to set a context for a request
func NewListUserMetaTagsParamsWithContext(ctx context.Context) *ListUserMetaTagsParams {
	var ()
	return &ListUserMetaTagsParams{

		Context: ctx,
	}
}

// NewListUserMetaTagsParamsWithHTTPClient creates a new ListUserMetaTagsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListUserMetaTagsParamsWithHTTPClient(client *http.Client) *ListUserMetaTagsParams {
	var ()
	return &ListUserMetaTagsParams{
		HTTPClient: client,
	}
}

/*ListUserMetaTagsParams contains all the parameters to send to the API endpoint
for the list user meta tags operation typically these are written to a http.Request
*/
type ListUserMetaTagsParams struct {

	/*Namespace*/
	Namespace string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list user meta tags params
func (o *ListUserMetaTagsParams) WithTimeout(timeout time.Duration) *ListUserMetaTagsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list user meta tags params
func (o *ListUserMetaTagsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list user meta tags params
func (o *ListUserMetaTagsParams) WithContext(ctx context.Context) *ListUserMetaTagsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list user meta tags params
func (o *ListUserMetaTagsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list user meta tags params
func (o *ListUserMetaTagsParams) WithHTTPClient(client *http.Client) *ListUserMetaTagsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list user meta tags params
func (o *ListUserMetaTagsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNamespace adds the namespace to the list user meta tags params
func (o *ListUserMetaTagsParams) WithNamespace(namespace string) *ListUserMetaTagsParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the list user meta tags params
func (o *ListUserMetaTagsParams) SetNamespace(namespace string) {
	o.Namespace = namespace
}

// WriteToRequest writes these params to a swagger request
func (o *ListUserMetaTagsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param Namespace
	if err := r.SetPathParam("Namespace", o.Namespace); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
