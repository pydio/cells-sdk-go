// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// RestShareLinkAccessType Known values for link permissions
// swagger:model restShareLinkAccessType
type RestShareLinkAccessType string

const (

	// RestShareLinkAccessTypeNoAccess captures enum value "NoAccess"
	RestShareLinkAccessTypeNoAccess RestShareLinkAccessType = "NoAccess"

	// RestShareLinkAccessTypePreview captures enum value "Preview"
	RestShareLinkAccessTypePreview RestShareLinkAccessType = "Preview"

	// RestShareLinkAccessTypeDownload captures enum value "Download"
	RestShareLinkAccessTypeDownload RestShareLinkAccessType = "Download"

	// RestShareLinkAccessTypeUpload captures enum value "Upload"
	RestShareLinkAccessTypeUpload RestShareLinkAccessType = "Upload"
)

// for schema
var restShareLinkAccessTypeEnum []interface{}

func init() {
	var res []RestShareLinkAccessType
	if err := json.Unmarshal([]byte(`["NoAccess","Preview","Download","Upload"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		restShareLinkAccessTypeEnum = append(restShareLinkAccessTypeEnum, v)
	}
}

func (m RestShareLinkAccessType) validateRestShareLinkAccessTypeEnum(path, location string, value RestShareLinkAccessType) error {
	if err := validate.Enum(path, location, value, restShareLinkAccessTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this rest share link access type
func (m RestShareLinkAccessType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateRestShareLinkAccessTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
