// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ObjectEncryptionMode Type of Encryption
// swagger:model objectEncryptionMode
type ObjectEncryptionMode string

const (

	// ObjectEncryptionModeCLEAR captures enum value "CLEAR"
	ObjectEncryptionModeCLEAR ObjectEncryptionMode = "CLEAR"

	// ObjectEncryptionModeMASTER captures enum value "MASTER"
	ObjectEncryptionModeMASTER ObjectEncryptionMode = "MASTER"

	// ObjectEncryptionModeUSER captures enum value "USER"
	ObjectEncryptionModeUSER ObjectEncryptionMode = "USER"

	// ObjectEncryptionModeUSERPWD captures enum value "USER_PWD"
	ObjectEncryptionModeUSERPWD ObjectEncryptionMode = "USER_PWD"
)

// for schema
var objectEncryptionModeEnum []interface{}

func init() {
	var res []ObjectEncryptionMode
	if err := json.Unmarshal([]byte(`["CLEAR","MASTER","USER","USER_PWD"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		objectEncryptionModeEnum = append(objectEncryptionModeEnum, v)
	}
}

func (m ObjectEncryptionMode) validateObjectEncryptionModeEnum(path, location string, value ObjectEncryptionMode) error {
	if err := validate.Enum(path, location, value, objectEncryptionModeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this object encryption mode
func (m ObjectEncryptionMode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateObjectEncryptionModeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
