// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// JobsTaskStatus /////////////////
// TASK SERVICE  //
// /////////////////
// swagger:model jobsTaskStatus
type JobsTaskStatus string

const (

	// JobsTaskStatusUnknown captures enum value "Unknown"
	JobsTaskStatusUnknown JobsTaskStatus = "Unknown"

	// JobsTaskStatusIDLE captures enum value "Idle"
	JobsTaskStatusIDLE JobsTaskStatus = "Idle"

	// JobsTaskStatusRunning captures enum value "Running"
	JobsTaskStatusRunning JobsTaskStatus = "Running"

	// JobsTaskStatusFinished captures enum value "Finished"
	JobsTaskStatusFinished JobsTaskStatus = "Finished"

	// JobsTaskStatusInterrupted captures enum value "Interrupted"
	JobsTaskStatusInterrupted JobsTaskStatus = "Interrupted"

	// JobsTaskStatusPaused captures enum value "Paused"
	JobsTaskStatusPaused JobsTaskStatus = "Paused"

	// JobsTaskStatusAny captures enum value "Any"
	JobsTaskStatusAny JobsTaskStatus = "Any"

	// JobsTaskStatusError captures enum value "Error"
	JobsTaskStatusError JobsTaskStatus = "Error"

	// JobsTaskStatusQueued captures enum value "Queued"
	JobsTaskStatusQueued JobsTaskStatus = "Queued"
)

// for schema
var jobsTaskStatusEnum []interface{}

func init() {
	var res []JobsTaskStatus
	if err := json.Unmarshal([]byte(`["Unknown","Idle","Running","Finished","Interrupted","Paused","Any","Error","Queued"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		jobsTaskStatusEnum = append(jobsTaskStatusEnum, v)
	}
}

func (m JobsTaskStatus) validateJobsTaskStatusEnum(path, location string, value JobsTaskStatus) error {
	if err := validate.Enum(path, location, value, jobsTaskStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this jobs task status
func (m JobsTaskStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateJobsTaskStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
