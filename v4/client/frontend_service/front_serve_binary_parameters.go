// Code generated by go-swagger; DO NOT EDIT.

package frontend_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewFrontServeBinaryParams creates a new FrontServeBinaryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewFrontServeBinaryParams() *FrontServeBinaryParams {
	return &FrontServeBinaryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewFrontServeBinaryParamsWithTimeout creates a new FrontServeBinaryParams object
// with the ability to set a timeout on a request.
func NewFrontServeBinaryParamsWithTimeout(timeout time.Duration) *FrontServeBinaryParams {
	return &FrontServeBinaryParams{
		timeout: timeout,
	}
}

// NewFrontServeBinaryParamsWithContext creates a new FrontServeBinaryParams object
// with the ability to set a context for a request.
func NewFrontServeBinaryParamsWithContext(ctx context.Context) *FrontServeBinaryParams {
	return &FrontServeBinaryParams{
		Context: ctx,
	}
}

// NewFrontServeBinaryParamsWithHTTPClient creates a new FrontServeBinaryParams object
// with the ability to set a custom HTTPClient for a request.
func NewFrontServeBinaryParamsWithHTTPClient(client *http.Client) *FrontServeBinaryParams {
	return &FrontServeBinaryParams{
		HTTPClient: client,
	}
}

/*
FrontServeBinaryParams contains all the parameters to send to the API endpoint

	for the front serve binary operation.

	Typically these are written to a http.Request.
*/
type FrontServeBinaryParams struct {

	/* BinaryType.

	   Currently supported values are USER and GLOBAL
	*/
	BinaryType string

	/* UUID.

	   Id of the binary
	*/
	UUID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the front serve binary params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FrontServeBinaryParams) WithDefaults() *FrontServeBinaryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the front serve binary params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *FrontServeBinaryParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the front serve binary params
func (o *FrontServeBinaryParams) WithTimeout(timeout time.Duration) *FrontServeBinaryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the front serve binary params
func (o *FrontServeBinaryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the front serve binary params
func (o *FrontServeBinaryParams) WithContext(ctx context.Context) *FrontServeBinaryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the front serve binary params
func (o *FrontServeBinaryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the front serve binary params
func (o *FrontServeBinaryParams) WithHTTPClient(client *http.Client) *FrontServeBinaryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the front serve binary params
func (o *FrontServeBinaryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBinaryType adds the binaryType to the front serve binary params
func (o *FrontServeBinaryParams) WithBinaryType(binaryType string) *FrontServeBinaryParams {
	o.SetBinaryType(binaryType)
	return o
}

// SetBinaryType adds the binaryType to the front serve binary params
func (o *FrontServeBinaryParams) SetBinaryType(binaryType string) {
	o.BinaryType = binaryType
}

// WithUUID adds the uuid to the front serve binary params
func (o *FrontServeBinaryParams) WithUUID(uuid string) *FrontServeBinaryParams {
	o.SetUUID(uuid)
	return o
}

// SetUUID adds the uuid to the front serve binary params
func (o *FrontServeBinaryParams) SetUUID(uuid string) {
	o.UUID = uuid
}

// WriteToRequest writes these params to a swagger request
func (o *FrontServeBinaryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param BinaryType
	if err := r.SetPathParam("BinaryType", o.BinaryType); err != nil {
		return err
	}

	// path param Uuid
	if err := r.SetPathParam("Uuid", o.UUID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
