// Code generated by go-swagger; DO NOT EDIT.

package meta_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-sdk-go/v3/models"
)

// SetMetaReader is a Reader for the SetMeta structure.
type SetMetaReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetMetaReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetMetaOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSetMetaUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSetMetaForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSetMetaNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSetMetaInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSetMetaOK creates a SetMetaOK with default headers values
func NewSetMetaOK() *SetMetaOK {
	return &SetMetaOK{}
}

/* SetMetaOK describes a response with status code 200, with default header values.

SetMetaOK set meta o k
*/
type SetMetaOK struct {
	Payload *models.TreeNode
}

func (o *SetMetaOK) Error() string {
	return fmt.Sprintf("[POST /meta/set/{NodePath}][%d] setMetaOK  %+v", 200, o.Payload)
}
func (o *SetMetaOK) GetPayload() *models.TreeNode {
	return o.Payload
}

func (o *SetMetaOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TreeNode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetMetaUnauthorized creates a SetMetaUnauthorized with default headers values
func NewSetMetaUnauthorized() *SetMetaUnauthorized {
	return &SetMetaUnauthorized{}
}

/* SetMetaUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type SetMetaUnauthorized struct {
	Payload *models.RestError
}

func (o *SetMetaUnauthorized) Error() string {
	return fmt.Sprintf("[POST /meta/set/{NodePath}][%d] setMetaUnauthorized  %+v", 401, o.Payload)
}
func (o *SetMetaUnauthorized) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SetMetaUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetMetaForbidden creates a SetMetaForbidden with default headers values
func NewSetMetaForbidden() *SetMetaForbidden {
	return &SetMetaForbidden{}
}

/* SetMetaForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type SetMetaForbidden struct {
	Payload *models.RestError
}

func (o *SetMetaForbidden) Error() string {
	return fmt.Sprintf("[POST /meta/set/{NodePath}][%d] setMetaForbidden  %+v", 403, o.Payload)
}
func (o *SetMetaForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SetMetaForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetMetaNotFound creates a SetMetaNotFound with default headers values
func NewSetMetaNotFound() *SetMetaNotFound {
	return &SetMetaNotFound{}
}

/* SetMetaNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type SetMetaNotFound struct {
	Payload *models.RestError
}

func (o *SetMetaNotFound) Error() string {
	return fmt.Sprintf("[POST /meta/set/{NodePath}][%d] setMetaNotFound  %+v", 404, o.Payload)
}
func (o *SetMetaNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SetMetaNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetMetaInternalServerError creates a SetMetaInternalServerError with default headers values
func NewSetMetaInternalServerError() *SetMetaInternalServerError {
	return &SetMetaInternalServerError{}
}

/* SetMetaInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type SetMetaInternalServerError struct {
	Payload *models.RestError
}

func (o *SetMetaInternalServerError) Error() string {
	return fmt.Sprintf("[POST /meta/set/{NodePath}][%d] setMetaInternalServerError  %+v", 500, o.Payload)
}
func (o *SetMetaInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SetMetaInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
