// Code generated by go-swagger; DO NOT EDIT.

package user_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-sdk-go/v3/models"
)

// SearchUsersReader is a Reader for the SearchUsers structure.
type SearchUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSearchUsersUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSearchUsersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchUsersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchUsersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchUsersOK creates a SearchUsersOK with default headers values
func NewSearchUsersOK() *SearchUsersOK {
	return &SearchUsersOK{}
}

/* SearchUsersOK describes a response with status code 200, with default header values.

SearchUsersOK search users o k
*/
type SearchUsersOK struct {
	Payload *models.RestUsersCollection
}

func (o *SearchUsersOK) Error() string {
	return fmt.Sprintf("[POST /user][%d] searchUsersOK  %+v", 200, o.Payload)
}
func (o *SearchUsersOK) GetPayload() *models.RestUsersCollection {
	return o.Payload
}

func (o *SearchUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestUsersCollection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchUsersUnauthorized creates a SearchUsersUnauthorized with default headers values
func NewSearchUsersUnauthorized() *SearchUsersUnauthorized {
	return &SearchUsersUnauthorized{}
}

/* SearchUsersUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type SearchUsersUnauthorized struct {
	Payload *models.RestError
}

func (o *SearchUsersUnauthorized) Error() string {
	return fmt.Sprintf("[POST /user][%d] searchUsersUnauthorized  %+v", 401, o.Payload)
}
func (o *SearchUsersUnauthorized) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SearchUsersUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchUsersForbidden creates a SearchUsersForbidden with default headers values
func NewSearchUsersForbidden() *SearchUsersForbidden {
	return &SearchUsersForbidden{}
}

/* SearchUsersForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type SearchUsersForbidden struct {
	Payload *models.RestError
}

func (o *SearchUsersForbidden) Error() string {
	return fmt.Sprintf("[POST /user][%d] searchUsersForbidden  %+v", 403, o.Payload)
}
func (o *SearchUsersForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SearchUsersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchUsersNotFound creates a SearchUsersNotFound with default headers values
func NewSearchUsersNotFound() *SearchUsersNotFound {
	return &SearchUsersNotFound{}
}

/* SearchUsersNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type SearchUsersNotFound struct {
	Payload *models.RestError
}

func (o *SearchUsersNotFound) Error() string {
	return fmt.Sprintf("[POST /user][%d] searchUsersNotFound  %+v", 404, o.Payload)
}
func (o *SearchUsersNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SearchUsersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchUsersInternalServerError creates a SearchUsersInternalServerError with default headers values
func NewSearchUsersInternalServerError() *SearchUsersInternalServerError {
	return &SearchUsersInternalServerError{}
}

/* SearchUsersInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type SearchUsersInternalServerError struct {
	Payload *models.RestError
}

func (o *SearchUsersInternalServerError) Error() string {
	return fmt.Sprintf("[POST /user][%d] searchUsersInternalServerError  %+v", 500, o.Payload)
}
func (o *SearchUsersInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *SearchUsersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
