// Code generated by go-swagger; DO NOT EDIT.

package share_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-sdk-go/v3/models"
)

// UpdateSharePoliciesReader is a Reader for the UpdateSharePolicies structure.
type UpdateSharePoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateSharePoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateSharePoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateSharePoliciesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateSharePoliciesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateSharePoliciesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateSharePoliciesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateSharePoliciesOK creates a UpdateSharePoliciesOK with default headers values
func NewUpdateSharePoliciesOK() *UpdateSharePoliciesOK {
	return &UpdateSharePoliciesOK{}
}

/* UpdateSharePoliciesOK describes a response with status code 200, with default header values.

UpdateSharePoliciesOK update share policies o k
*/
type UpdateSharePoliciesOK struct {
	Payload *models.RestUpdateSharePoliciesResponse
}

func (o *UpdateSharePoliciesOK) Error() string {
	return fmt.Sprintf("[PUT /share/policies][%d] updateSharePoliciesOK  %+v", 200, o.Payload)
}
func (o *UpdateSharePoliciesOK) GetPayload() *models.RestUpdateSharePoliciesResponse {
	return o.Payload
}

func (o *UpdateSharePoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestUpdateSharePoliciesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSharePoliciesUnauthorized creates a UpdateSharePoliciesUnauthorized with default headers values
func NewUpdateSharePoliciesUnauthorized() *UpdateSharePoliciesUnauthorized {
	return &UpdateSharePoliciesUnauthorized{}
}

/* UpdateSharePoliciesUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type UpdateSharePoliciesUnauthorized struct {
	Payload *models.RestError
}

func (o *UpdateSharePoliciesUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /share/policies][%d] updateSharePoliciesUnauthorized  %+v", 401, o.Payload)
}
func (o *UpdateSharePoliciesUnauthorized) GetPayload() *models.RestError {
	return o.Payload
}

func (o *UpdateSharePoliciesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSharePoliciesForbidden creates a UpdateSharePoliciesForbidden with default headers values
func NewUpdateSharePoliciesForbidden() *UpdateSharePoliciesForbidden {
	return &UpdateSharePoliciesForbidden{}
}

/* UpdateSharePoliciesForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type UpdateSharePoliciesForbidden struct {
	Payload *models.RestError
}

func (o *UpdateSharePoliciesForbidden) Error() string {
	return fmt.Sprintf("[PUT /share/policies][%d] updateSharePoliciesForbidden  %+v", 403, o.Payload)
}
func (o *UpdateSharePoliciesForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *UpdateSharePoliciesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSharePoliciesNotFound creates a UpdateSharePoliciesNotFound with default headers values
func NewUpdateSharePoliciesNotFound() *UpdateSharePoliciesNotFound {
	return &UpdateSharePoliciesNotFound{}
}

/* UpdateSharePoliciesNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type UpdateSharePoliciesNotFound struct {
	Payload *models.RestError
}

func (o *UpdateSharePoliciesNotFound) Error() string {
	return fmt.Sprintf("[PUT /share/policies][%d] updateSharePoliciesNotFound  %+v", 404, o.Payload)
}
func (o *UpdateSharePoliciesNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *UpdateSharePoliciesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateSharePoliciesInternalServerError creates a UpdateSharePoliciesInternalServerError with default headers values
func NewUpdateSharePoliciesInternalServerError() *UpdateSharePoliciesInternalServerError {
	return &UpdateSharePoliciesInternalServerError{}
}

/* UpdateSharePoliciesInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type UpdateSharePoliciesInternalServerError struct {
	Payload *models.RestError
}

func (o *UpdateSharePoliciesInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /share/policies][%d] updateSharePoliciesInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateSharePoliciesInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *UpdateSharePoliciesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
