// Code generated by go-swagger; DO NOT EDIT.

package install_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-sdk-go/v3/models"
)

// PostInstallReader is a Reader for the PostInstall structure.
type PostInstallReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostInstallReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostInstallOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPostInstallUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostInstallForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostInstallNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostInstallInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostInstallOK creates a PostInstallOK with default headers values
func NewPostInstallOK() *PostInstallOK {
	return &PostInstallOK{}
}

/* PostInstallOK describes a response with status code 200, with default header values.

PostInstallOK post install o k
*/
type PostInstallOK struct {
	Payload *models.InstallInstallResponse
}

func (o *PostInstallOK) Error() string {
	return fmt.Sprintf("[POST /install][%d] postInstallOK  %+v", 200, o.Payload)
}
func (o *PostInstallOK) GetPayload() *models.InstallInstallResponse {
	return o.Payload
}

func (o *PostInstallOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InstallInstallResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostInstallUnauthorized creates a PostInstallUnauthorized with default headers values
func NewPostInstallUnauthorized() *PostInstallUnauthorized {
	return &PostInstallUnauthorized{}
}

/* PostInstallUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type PostInstallUnauthorized struct {
	Payload *models.RestError
}

func (o *PostInstallUnauthorized) Error() string {
	return fmt.Sprintf("[POST /install][%d] postInstallUnauthorized  %+v", 401, o.Payload)
}
func (o *PostInstallUnauthorized) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PostInstallUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostInstallForbidden creates a PostInstallForbidden with default headers values
func NewPostInstallForbidden() *PostInstallForbidden {
	return &PostInstallForbidden{}
}

/* PostInstallForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type PostInstallForbidden struct {
	Payload *models.RestError
}

func (o *PostInstallForbidden) Error() string {
	return fmt.Sprintf("[POST /install][%d] postInstallForbidden  %+v", 403, o.Payload)
}
func (o *PostInstallForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PostInstallForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostInstallNotFound creates a PostInstallNotFound with default headers values
func NewPostInstallNotFound() *PostInstallNotFound {
	return &PostInstallNotFound{}
}

/* PostInstallNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type PostInstallNotFound struct {
	Payload *models.RestError
}

func (o *PostInstallNotFound) Error() string {
	return fmt.Sprintf("[POST /install][%d] postInstallNotFound  %+v", 404, o.Payload)
}
func (o *PostInstallNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PostInstallNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostInstallInternalServerError creates a PostInstallInternalServerError with default headers values
func NewPostInstallInternalServerError() *PostInstallInternalServerError {
	return &PostInstallInternalServerError{}
}

/* PostInstallInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type PostInstallInternalServerError struct {
	Payload *models.RestError
}

func (o *PostInstallInternalServerError) Error() string {
	return fmt.Sprintf("[POST /install][%d] postInstallInternalServerError  %+v", 500, o.Payload)
}
func (o *PostInstallInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *PostInstallInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
