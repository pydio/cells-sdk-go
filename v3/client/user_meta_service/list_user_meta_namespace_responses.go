// Code generated by go-swagger; DO NOT EDIT.

package user_meta_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/pydio/cells-sdk-go/v3/models"
)

// ListUserMetaNamespaceReader is a Reader for the ListUserMetaNamespace structure.
type ListUserMetaNamespaceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListUserMetaNamespaceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListUserMetaNamespaceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListUserMetaNamespaceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListUserMetaNamespaceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListUserMetaNamespaceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListUserMetaNamespaceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListUserMetaNamespaceOK creates a ListUserMetaNamespaceOK with default headers values
func NewListUserMetaNamespaceOK() *ListUserMetaNamespaceOK {
	return &ListUserMetaNamespaceOK{}
}

/* ListUserMetaNamespaceOK describes a response with status code 200, with default header values.

ListUserMetaNamespaceOK list user meta namespace o k
*/
type ListUserMetaNamespaceOK struct {
	Payload *models.RestUserMetaNamespaceCollection
}

func (o *ListUserMetaNamespaceOK) Error() string {
	return fmt.Sprintf("[GET /user-meta/namespace][%d] listUserMetaNamespaceOK  %+v", 200, o.Payload)
}
func (o *ListUserMetaNamespaceOK) GetPayload() *models.RestUserMetaNamespaceCollection {
	return o.Payload
}

func (o *ListUserMetaNamespaceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestUserMetaNamespaceCollection)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserMetaNamespaceUnauthorized creates a ListUserMetaNamespaceUnauthorized with default headers values
func NewListUserMetaNamespaceUnauthorized() *ListUserMetaNamespaceUnauthorized {
	return &ListUserMetaNamespaceUnauthorized{}
}

/* ListUserMetaNamespaceUnauthorized describes a response with status code 401, with default header values.

User is not authenticated
*/
type ListUserMetaNamespaceUnauthorized struct {
	Payload *models.RestError
}

func (o *ListUserMetaNamespaceUnauthorized) Error() string {
	return fmt.Sprintf("[GET /user-meta/namespace][%d] listUserMetaNamespaceUnauthorized  %+v", 401, o.Payload)
}
func (o *ListUserMetaNamespaceUnauthorized) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ListUserMetaNamespaceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserMetaNamespaceForbidden creates a ListUserMetaNamespaceForbidden with default headers values
func NewListUserMetaNamespaceForbidden() *ListUserMetaNamespaceForbidden {
	return &ListUserMetaNamespaceForbidden{}
}

/* ListUserMetaNamespaceForbidden describes a response with status code 403, with default header values.

User has no permission to access this resource
*/
type ListUserMetaNamespaceForbidden struct {
	Payload *models.RestError
}

func (o *ListUserMetaNamespaceForbidden) Error() string {
	return fmt.Sprintf("[GET /user-meta/namespace][%d] listUserMetaNamespaceForbidden  %+v", 403, o.Payload)
}
func (o *ListUserMetaNamespaceForbidden) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ListUserMetaNamespaceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserMetaNamespaceNotFound creates a ListUserMetaNamespaceNotFound with default headers values
func NewListUserMetaNamespaceNotFound() *ListUserMetaNamespaceNotFound {
	return &ListUserMetaNamespaceNotFound{}
}

/* ListUserMetaNamespaceNotFound describes a response with status code 404, with default header values.

Resource does not exist in the system
*/
type ListUserMetaNamespaceNotFound struct {
	Payload *models.RestError
}

func (o *ListUserMetaNamespaceNotFound) Error() string {
	return fmt.Sprintf("[GET /user-meta/namespace][%d] listUserMetaNamespaceNotFound  %+v", 404, o.Payload)
}
func (o *ListUserMetaNamespaceNotFound) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ListUserMetaNamespaceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListUserMetaNamespaceInternalServerError creates a ListUserMetaNamespaceInternalServerError with default headers values
func NewListUserMetaNamespaceInternalServerError() *ListUserMetaNamespaceInternalServerError {
	return &ListUserMetaNamespaceInternalServerError{}
}

/* ListUserMetaNamespaceInternalServerError describes a response with status code 500, with default header values.

An internal error occurred in the backend
*/
type ListUserMetaNamespaceInternalServerError struct {
	Payload *models.RestError
}

func (o *ListUserMetaNamespaceInternalServerError) Error() string {
	return fmt.Sprintf("[GET /user-meta/namespace][%d] listUserMetaNamespaceInternalServerError  %+v", 500, o.Payload)
}
func (o *ListUserMetaNamespaceInternalServerError) GetPayload() *models.RestError {
	return o.Payload
}

func (o *ListUserMetaNamespaceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
